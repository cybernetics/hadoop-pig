From c169940bf826e222655761b9c4eb0604b9c6be4a Mon Sep 17 00:00:00 2001
From: Eli Collins <eli@cloudera.com>
Date: Tue, 4 Jan 2011 10:25:20 -0800
Subject: [PATCH 1/3] CLOUDERA-BUILD. Add cloudera build directory and example confs.

---
 bin/pig                                     |   38 +++++---
 build.xml                                   |    7 ++
 cloudera/README.cloudera                    |    9 ++
 cloudera/do-release-build                   |   42 ++++++++
 cloudera/install_pig.sh                     |  135 +++++++++++++++++++++++++++
 cloudera/pig.1                              |  115 +++++++++++++++++++++++
 example-confs/conf.default/log4j.properties |    8 ++
 example-confs/conf.default/pig.properties   |   54 +++++++++++
 src/docs/forrest.properties                 |    2 +-
 9 files changed, 393 insertions(+), 17 deletions(-)
 create mode 100644 cloudera/README.cloudera
 create mode 100755 cloudera/do-release-build
 create mode 100644 cloudera/install_pig.sh
 create mode 100644 cloudera/pig.1
 create mode 100644 example-confs/conf.default/log4j.properties
 create mode 100644 example-confs/conf.default/pig.properties

diff --git a/bin/pig b/bin/pig
index ffb155c..c5e4e09 100755
--- a/bin/pig
+++ b/bin/pig
@@ -34,7 +34,7 @@
 #
 #     PIG_ROOT_LOGGER The root appender. Default is INFO,console
 #
-#     PIG_HADOOP_VERSION Version of hadoop to run with.    Default is 20 (0.20).
+#     HADOOP_HOME - Optionally, the Hadoop home to run with.
 
 cygwin=false
 case "`uname`" in
@@ -126,7 +126,7 @@ fi
 IFS=
 
 # for releases, add core pig to CLASSPATH
-for f in $PIG_HOME/pig-*-core.jar; do
+for f in $PIG_HOME/pig-*.jar; do
     CLASSPATH=${CLASSPATH}:$f;
 done
 
@@ -135,23 +135,27 @@ for f in $PIG_HOME/build/pig-*-SNAPSHOT.jar; do
     CLASSPATH=${CLASSPATH}:$f;
 done
 
-# Set the version for Hadoop, default to 17
-PIG_HADOOP_VERSION="${PIG_HADOOP_VERSION:-20}"
-# add libs to CLASSPATH.    There can be more than one version of the hadoop
-# libraries in the lib dir, so don't blindly add them all.    Only add the one
-# that matche PIG_HADOOP_VERSION.
-for f in $PIG_HOME/lib/*.jar; do
-    IS_HADOOP=`echo $f | grep hadoop`
-    if [ "${IS_HADOOP}x" == "x" ]; then
-        CLASSPATH=${CLASSPATH}:$f;
-    else 
-        IS_RIGHT_VER=`echo $f | grep hadoop${PIG_HADOOP_VERSION}.jar`
-        if [ "${IS_RIGHT_VER}x" != "x" ]; then
-            CLASSPATH=${CLASSPATH}:$f;
-        fi
+# Add pig libs
+for lib in $PIG_HOME/lib/*.jar $PIG_HOME/build/ivy/lib/Pig/*.jar ; do
+    if [[ $lib != $PIG_HOME/lib/hadoop* ]] ; then
+        CLASSPATH=$CLASSPATH:$lib
     fi
 done
 
+# Add installed version of Hadoop to classpath
+HADOOP_HOME=${HADOOP_HOME:-/usr/lib/hadoop}
+. $HADOOP_HOME/bin/hadoop-config.sh
+
+for jar in $HADOOP_HOME/hadoop-core-*.jar $HADOOP_HOME/lib/* ; do
+   CLASSPATH=$CLASSPATH:$jar
+done
+if [ ! -z "$HADOOP_CLASSPATH" ] ; then
+  CLASSPATH=$CLASSPATH:$HADOOP_CLASSPATH
+fi
+if [ ! -z "$HADOOP_CONF_DIR" ] ; then
+  CLASSPATH=$CLASSPATH:$HADOOP_CONF_DIR
+fi
+
 # add user-specified CLASSPATH last
 if [ "$PIG_CLASSPATH" != "" ]; then
     CLASSPATH=${CLASSPATH}:${PIG_CLASSPATH}
@@ -177,6 +181,8 @@ unset IFS
 
 CLASS=org.apache.pig.Main
 
+# Ensure we use the right doc builder factory to eliminate warnings. See HADOOP-5254
+PIG_OPTS="$PIG_OPTS -Djavax.xml.parsers.DocumentBuilderFactory=com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl"
 PIG_OPTS="$PIG_OPTS -Dpig.log.dir=$PIG_LOG_DIR"
 PIG_OPTS="$PIG_OPTS -Dpig.log.file=$PIG_LOGFILE"
 PIG_OPTS="$PIG_OPTS -Dpig.home.dir=$PIG_HOME"
diff --git a/build.xml b/build.xml
index 58c7203..2b8bc57 100644
--- a/build.xml
+++ b/build.xml
@@ -698,6 +698,13 @@
         <mkdir dir="${dist.dir}/docs/jdiff"/>
         <mkdir dir="${dist.dir}/license" />
 
+        <copy todir="${dist.dir}/cloudera">
+            <fileset dir="cloudera" />
+        </copy>
+        <copy todir="${dist.dir}/example-confs">
+            <fileset dir="example-confs" />
+        </copy>
+
         <copy todir="${dist.dir}/lib" includeEmptyDirs="false">
             <!--fileset dir="${ivy.lib.dir}"/-->
             <fileset dir="${lib.dir}"/>
diff --git a/cloudera/README.cloudera b/cloudera/README.cloudera
new file mode 100644
index 0000000..394d47c
--- /dev/null
+++ b/cloudera/README.cloudera
@@ -0,0 +1,9 @@
+This build was generated by Cloudera's build system in the following manner:
+
+1) The pristine open-source release tarball was unpacked
+
+2) The patches contained within the patches/ directory next to this README
+were applied using the apply-patches script. A complete log of these changes
+is also included in CHANGES.cloudera.txt.
+
+3) The project was built by running the do-release-build script in this directory.
\ No newline at end of file
diff --git a/cloudera/do-release-build b/cloudera/do-release-build
new file mode 100755
index 0000000..3aad0ab
--- /dev/null
+++ b/cloudera/do-release-build
@@ -0,0 +1,42 @@
+#!/bin/bash
+# Copyright (c) 2009 Cloudera, inc
+#
+# Performs a release build
+
+set -e
+
+JAVA32_HOME=${JAVA32_HOME:-$JAVA_HOME}
+
+# Check that JVMs support the right architectures
+# Passing -d with an architecture that's not supported results
+# in a non-zero exit code even with -version
+if ! $JAVA32_HOME/bin/java -d32 -version ; then
+  echo Your jvm in $JAVA32_HOME seems like it doesnt support 32-bit mode 1>&2
+  echo Please set JAVA32_HOME to point to a 32-bit JDK
+  exit 1
+fi
+
+if ! [ -e $JAVA5_HOME/bin/java ]; then
+  echo No JAVA5_HOME set. Forrest documentation requires Java 5 to be 1>&2
+  echo installed. 1>&2
+  exit 1
+fi
+
+if ! [ -e $FORREST_HOME/bin/forrest ]; then
+  echo No FORREST_HOME set. Forrest documentation requires Forrest to be 1>&2
+  echo installed. 1>&2
+  exit 1
+fi
+
+# Do the build
+BIN_DIR=$(readlink -f $(dirname $0))
+RELEASE_DIR=$BIN_DIR/..
+
+cd $RELEASE_DIR
+
+JAVA_HOME=$JAVA_HOME \
+  ant \
+  -Djava5.home=$JAVA5_HOME \
+  -Dforrest.home=$FORREST_HOME \
+  -propertyfile cloudera/build.properties \
+  tar
diff --git a/cloudera/install_pig.sh b/cloudera/install_pig.sh
new file mode 100644
index 0000000..9eef0db
--- /dev/null
+++ b/cloudera/install_pig.sh
@@ -0,0 +1,135 @@
+#!/bin/sh
+# Copyright 2009 Cloudera, inc.
+set -e
+
+usage() {
+  echo "
+usage: $0 <options>
+  Required not-so-options:
+     --cloudera-source-dir=DIR   path to cloudera distribution files
+     --build-dir=DIR             path to pig dist.dir
+     --prefix=PREFIX             path to install into
+
+  Optional options:
+     --doc-dir=DIR               path to install docs into [/usr/share/doc/pig]
+     --lib-dir=DIR               path to install pig home [/usr/lib/pig]
+     --installed-lib-dir=DIR     path where lib-dir will end up on target system
+     --bin-dir=DIR               path to install bins [/usr/bin]
+     --examples-dir=DIR          path to install examples [doc-dir/examples]
+     ... [ see source for more similar options ]
+  "
+  exit 1
+}
+
+OPTS=$(getopt \
+  -n $0 \
+  -o '' \
+  -l 'cloudera-source-dir:' \
+  -l 'prefix:' \
+  -l 'doc-dir:' \
+  -l 'lib-dir:' \
+  -l 'installed-lib-dir:' \
+  -l 'bin-dir:' \
+  -l 'examples-dir:' \
+  -l 'build-dir:' -- "$@")
+
+if [ $? != 0 ] ; then
+    usage
+fi
+
+eval set -- "$OPTS"
+while true ; do
+    case "$1" in
+        --cloudera-source-dir)
+        CLOUDERA_SOURCE_DIR=$2 ; shift 2
+        ;;
+        --prefix)
+        PREFIX=$2 ; shift 2
+        ;;
+        --build-dir)
+        BUILD_DIR=$2 ; shift 2
+        ;;
+        --doc-dir)
+        DOC_DIR=$2 ; shift 2
+        ;;
+        --lib-dir)
+        LIB_DIR=$2 ; shift 2
+        ;;
+        --installed-lib-dir)
+        INSTALLED_LIB_DIR=$2 ; shift 2
+        ;;
+        --bin-dir)
+        BIN_DIR=$2 ; shift 2
+        ;;
+        --examples-dir)
+        EXAMPLES_DIR=$2 ; shift 2
+        ;;
+        --)
+        shift ; break
+        ;;
+        *)
+        echo "Unknown option: $1"
+        usage
+        exit 1
+        ;;
+    esac
+done
+
+for var in CLOUDERA_SOURCE_DIR PREFIX BUILD_DIR ; do
+  if [ -z "$(eval "echo \$$var")" ]; then
+    echo Missing param: $var
+    usage
+  fi
+done
+
+MAN_DIR=$PREFIX/usr/share/man/man1
+DOC_DIR=${DOC_DIR:-$PREFIX/usr/share/doc/pig}
+LIB_DIR=${LIB_DIR:-$PREFIX/usr/lib/pig}
+INSTALLED_LIB_DIR=${INSTALLED_LIB_DIR:-/usr/lib/pig}
+EXAMPLES_DIR=${EXAMPLES_DIR:-$DOC_DIR/examples}
+BIN_DIR=${BIN_DIR:-$PREFIX/usr/bin}
+CONF_DIR=/etc/pig
+CONF_DIST_DIR=/etc/pig/conf.dist
+
+# First we'll move everything into lib
+install -d -m 0755 $LIB_DIR
+(cd $BUILD_DIR && tar -cf - .) | (cd $LIB_DIR && tar -xf -)
+
+# Remove directories that are going elsewhere
+for dir in src lib-src docs tutorial test build.xml
+do
+   rm -rf $LIB_DIR/$dir
+done
+
+# Copy in the configuration files
+install -d -m 0755 $PREFIX/$CONF_DIST_DIR
+cp example-confs/conf.default/* $PREFIX/$CONF_DIST_DIR
+ln -s /etc/pig/conf $LIB_DIR/conf
+
+# Copy in the /usr/bin/pig wrapper
+install -d -m 0755 $BIN_DIR
+cat > $BIN_DIR/pig <<EOF
+#!/bin/sh
+
+exec $INSTALLED_LIB_DIR/bin/pig "\$@"
+EOF
+chmod 755 $BIN_DIR/pig
+
+install -d -m 0755 $MAN_DIR
+gzip -c $CLOUDERA_SOURCE_DIR/pig.1 > $MAN_DIR/pig.1.gz
+
+# Copy in the docs
+install -d -m 0755 $DOC_DIR
+(cd $BUILD_DIR/docs && tar -cf - .)|(cd $DOC_DIR && tar -xf -)
+
+install -d -m 0755 $EXAMPLES_DIR
+PIG_JAR=$(basename $(ls $LIB_DIR/pig*core.jar))
+sed -i -e "s|../pig.jar|/usr/lib/pig/$PIG_JAR|" $BUILD_DIR/tutorial/build.xml
+(cd $BUILD_DIR/tutorial && tar -cf - .)|(cd $EXAMPLES_DIR && tar -xf -)
+
+# It's somewhat silly that the hadoop jars are included in the pig lib
+# dir, since we depend on hadoop in our packages. We can rm them
+rm -f $LIB_DIR/lib/hadoop*jar
+
+# Pig log directory
+install -d -m 1777 $PREFIX/var/log/pig
diff --git a/cloudera/pig.1 b/cloudera/pig.1
new file mode 100644
index 0000000..737ebcf
--- /dev/null
+++ b/cloudera/pig.1
@@ -0,0 +1,115 @@
+.\" Process this file with
+.\" groff -man -Tascii pig.1
+.\"
+.TH pig 1 "October 2010 " Linux "User Manuals"
+
+.SH NAME
+Pig \- A high-level language for expressing data analysis programs,
+coupled with infrastructure for evaluating these programs.
+
+.SH SYNOPSIS
+
+.B pig
+[options] [-] : Run interactively in grunt shell.
+
+.B pig
+[options] -e[xecute] cmd [cmd ...] : Run cmd(s).
+
+.B pig
+[options] [-f[ile]] file : Run cmds found in file.
+
+.SH DESCRIPTION
+
+Apache Pig is a platform for analyzing large data sets that consists
+of a high-level language for expressing data analysis programs,
+coupled with infrastructure for evaluating these programs. The salient
+property of Pig programs is that their structure is amenable to
+substantial parallelization, which in turns enables them to handle
+very large data sets.
+
+For more information about Pig, see http://pig.apache.org.
+
+.SH OPTIONS
+
+.IP "-4, -log4jconf"
+log4j configuration file, overrides log conf
+
+.IP "-b, -brief"
+brief logging (no timestamps)
+
+.IP "-c, -cluster"
+clustername, kryptonite is default
+
+.IP "-d, -debug"
+debug level, INFO is default
+
+.IP "-e, -execute"
+commands to execute (within quotes)
+
+.IP "-f, -file"
+path to the script to execute
+
+.IP "-h, -help"
+display this message
+
+.IP "-i, -version"
+display version information
+
+.IP "-j, -jar jarfile"
+load jarfile
+
+.IP "-l, -logfile"
+path to client side log file; current working directory is default
+
+.IP "-m, -param_file"
+path to the parameter file
+
+.IP "-p, -param"
+key value pair of the form param=val
+
+.IP "-r, -dryrun"
+
+.IP "-t, -optimizer_off"
+optimizer rule name, turn optimizer off for this rule; use all to turn
+all rules off, optimizer is turned on by default
+
+.IP "-v, -verbose"
+print all error messages to screen
+
+.IP "-w, -warning"
+turn warning on; also turns warning aggregation off
+
+.IP "-x, -exectype=[local|mapreduce]"
+execution type; mapreduce is default
+
+.IP "-F, -stop_on_failure"
+aborts execution on the first failed job; off by default
+
+.IP "-M, -no_multiquery"
+turn multiquery optimization off; Multiquery is on by default
+
+.SH ENVIRONMENT
+
+.IP JAVA_HOME
+The java implementation to use.
+
+.IP PIG_CLASSPATH
+Extra Java CLASSPATH entries.
+
+.IP PIG_HEAPSIZE
+The maximum amount of heap to use, in MB. Default is 1000.
+
+.IP PIG_OPTS
+Extra Java runtime options.
+
+.IP PIG_CONF_DIR
+Alternate conf dir. Default is ${PIG_HOME}/conf.
+
+.IP PIG_ROOT_LOGGER
+The root appender. Default is INFO,console.
+
+.IP HADOOP_HOME
+Optionally, the Hadoop home to run with.
+
+.SH COPYRIGHT
+Copyright (C) 2010 The Apache Software Foundation. All rights reserved.
diff --git a/example-confs/conf.default/log4j.properties b/example-confs/conf.default/log4j.properties
new file mode 100644
index 0000000..2b01538
--- /dev/null
+++ b/example-confs/conf.default/log4j.properties
@@ -0,0 +1,8 @@
+# ***** Set root logger level to DEBUG and its only appender to A.
+log4j.logger.org.apache.pig=info, A
+
+# ***** A is set to be a ConsoleAppender.
+log4j.appender.A=org.apache.log4j.ConsoleAppender
+# ***** A uses PatternLayout.
+log4j.appender.A.layout=org.apache.log4j.PatternLayout
+log4j.appender.A.layout.ConversionPattern=%-4r [%t] %-5p %c %x - %m%n
diff --git a/example-confs/conf.default/pig.properties b/example-confs/conf.default/pig.properties
new file mode 100644
index 0000000..004d2e6
--- /dev/null
+++ b/example-confs/conf.default/pig.properties
@@ -0,0 +1,54 @@
+# Pig configuration file. All values can be overwritten by command line arguments.
+# see bin/pig -help
+
+# log4jconf log4j configuration file
+# log4jconf=./conf/log4j.properties
+
+# brief logging (no timestamps)
+brief=false
+
+# clustername, name of the hadoop jobtracker. If no port is defined port 50020 will be used. 
+#cluster
+
+#debug level, INFO is default
+debug=INFO
+
+# a file that contains pig script
+#file=
+
+# load jarfile, colon separated
+#jar=
+
+#verbose print all log messages to screen (default to print only INFO and above to screen)
+verbose=false
+
+#exectype local|mapreduce, mapreduce is default
+#exectype=mapreduce
+# hod realted properties
+#ssh.gateway
+#hod.expect.root
+#hod.expect.uselatest
+#hod.command
+#hod.config.dir
+#hod.param
+
+
+#Do not spill temp files smaller than this size (bytes)
+pig.spill.size.threshold=5000000
+#EXPERIMENT: Activate garbage collection when spilling a file bigger than this size (bytes)
+#This should help reduce the number of files being spilled.
+pig.spill.gc.activation.size=40000000
+
+
+######################
+# Everything below this line is Yahoo specific.  Note that I've made
+# (almost) no changes to the lines above to make merging in from Apache
+# easier.  Any values I don't want from above I override below.
+#
+# This file is configured for use with HOD on the production clusters.  If you
+# want to run pig with a static cluster you will need to remove everything
+# below this line and set the cluster value (above) to the
+# hostname and port of your job tracker.
+
+exectype=mapreduce
+log.file=
diff --git a/src/docs/forrest.properties b/src/docs/forrest.properties
index 51f1af7..7108021 100644
--- a/src/docs/forrest.properties
+++ b/src/docs/forrest.properties
@@ -118,7 +118,7 @@
 #project.debuglevel=ERROR
 
 # Max memory to allocate to Java
-#forrest.maxmemory=64m
+forrest.maxmemory=512m
 
 # Any other arguments to pass to the JVM. For example, to run on an X-less
 # server, set to -Djava.awt.headless=true
-- 
1.7.0.4

